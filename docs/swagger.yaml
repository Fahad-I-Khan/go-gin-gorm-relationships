definitions:
  main.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  main.Post:
    properties:
      body:
        type: string
      id:
        type: integer
      tags:
        items:
          $ref: '#/definitions/main.Tag'
        type: array
      title:
        type: string
      user_id:
        type: integer
    type: object
  main.Tag:
    description: Tag model
    properties:
      id:
        type: integer
      name:
        type: string
      posts:
        items:
          $ref: '#/definitions/main.Post'
        type: array
    type: object
  main.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      posts:
        items:
          $ref: '#/definitions/main.Post'
        type: array
    type: object
host: localhost:8000
info:
  contact:
    email: support@localhost.com
    name: API Support
    url: http://localhost:8000/support   // Local URL for your development environment
  description: This is a sample API with Swagger integration.
  title: Go API with Swagger
  version: "1.0"
paths:
  /api/v1/posts/{postID}/tags/{tagID}:
    post:
      description: Associate an existing tag with a specific post
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      - description: Tag ID
        in: path
        name: tagID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Add a tag to a post
      tags:
      - Tags
  /api/v1/tags:
    get:
      description: Get all tags along with associated posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Tag'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all tags
      tags:
      - Tags
    post:
      consumes:
      - application/json
      description: Create a new tag
      parameters:
      - description: Tag data
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/main.Tag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Tag'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Create a new tag
      tags:
      - Tags
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get all users along with their posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user by providing a name and email
      parameters:
      - description: New user information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Create a new user
      tags:
      - Users
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Get a specific user with their posts
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get user by ID
      tags:
      - Users
  /api/v1/users/{userID}/posts:
    post:
      consumes:
      - application/json
      description: Add a new post to the specified user by user ID
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - description: Post details
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/main.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Create a post for a specific user
      tags:
      - posts
swagger: "2.0"
